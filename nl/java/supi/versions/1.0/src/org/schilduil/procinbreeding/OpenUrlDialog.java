/*
 * Copyright (C) 2008, The Schilduil Software Team. All rights
 * reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 * 
 * 3. The end-user documentation included with the redistribution,
 * if any, must include the following acknowledgment:
 * "This product includes software developed by the
 * Schilduil Software Team (http://www.schilduil.org/)."
 * Alternately, this acknowledgment may appear in the software itself,
 * if and wherever such third-party acknowledgments normally appear.
 * 
 * 4. The name "Schilduil Software Team" or any of its contributors must
 * not be used to endorse or promote products derived from this
 * software without prior written permission. For written permission,
 * please contact license@schilduil.org.
 * 
 * 5. Products derived from this software may not be called "Schilduil",
 * nor may "Schilduil" appear in their name, without prior written
 * permission of the Schilduil Software Team.
 * 
 * 
 * DISCLAIMER
 * 
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE SCHILDUIL DEVELOPMENT TEAM OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE. 
 */
package org.schilduil.procinbreeding;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;

/**
 *
 * @author  bert
 */
public class OpenUrlDialog extends javax.swing.JDialog {

   private URL url = null;

   public URL getUrl() {

      return this.url;

   }

   /** Creates new form OpenUrlDialog */
   public OpenUrlDialog(java.awt.Frame parent) {
      super(parent);
      initComponents();
   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      urlCenterPanel = new javax.swing.JPanel();
      urlLabel = new javax.swing.JLabel();
      urlTextField = new javax.swing.JTextField();
      buttonPanel = new javax.swing.JPanel();
      openButton = new javax.swing.JButton();
      cancelButton = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/schilduil/procinbreeding/resources/OpenUrlDialog"); // NOI18N
      setTitle(bundle.getString("title")); // NOI18N
      setMinimumSize(new java.awt.Dimension(300, 53));
      setModal(true);
      setName("OpenUrlDialog"); // NOI18N

      urlCenterPanel.setMaximumSize(new java.awt.Dimension(200, 20));
      urlCenterPanel.setMinimumSize(new java.awt.Dimension(100, 20));
      urlCenterPanel.setName("urlCenterPanel"); // NOI18N
      urlCenterPanel.setLayout(new java.awt.BorderLayout());

      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.schilduil.procinbreeding.SuProcInbreedingApp.class).getContext().getResourceMap(OpenUrlDialog.class);
      urlLabel.setText(resourceMap.getString("urlLabel.text")); // NOI18N
      urlLabel.setName("urlLabel"); // NOI18N
      urlCenterPanel.add(urlLabel, java.awt.BorderLayout.LINE_START);

      urlTextField.setText(resourceMap.getString("urlTextField.text")); // NOI18N
      urlTextField.setMaximumSize(new java.awt.Dimension(300, 20));
      urlTextField.setMinimumSize(new java.awt.Dimension(250, 20));
      urlTextField.setName("urlTextField"); // NOI18N
      urlTextField.addKeyListener(new java.awt.event.KeyAdapter() {
         public void keyPressed(java.awt.event.KeyEvent evt) {
            urlTextFieldKeyPressed(evt);
         }
      });
      urlCenterPanel.add(urlTextField, java.awt.BorderLayout.CENTER);

      getContentPane().add(urlCenterPanel, java.awt.BorderLayout.CENTER);

      buttonPanel.setName("buttonPanel"); // NOI18N

      javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(org.schilduil.procinbreeding.SuProcInbreedingApp.class).getContext().getActionMap(OpenUrlDialog.class, this);
      openButton.setAction(actionMap.get("open")); // NOI18N
      openButton.setMnemonic('O');
      openButton.setName("openButton"); // NOI18N
      buttonPanel.add(openButton);

      cancelButton.setAction(actionMap.get("doCancel")); // NOI18N
      cancelButton.setMnemonic('C');
      cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
      cancelButton.setName("cancelButton"); // NOI18N
      buttonPanel.add(cancelButton);

      getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

      pack();
   }// </editor-fold>//GEN-END:initComponents
   private void urlTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_urlTextFieldKeyPressed
      //System.out.println("Keycode: " + evt.getKeyCode());
      if (evt.getKeyCode() == 27) {
         doCancel();
      } else if (evt.getKeyCode() == 10) {
         open();
      }
   }//GEN-LAST:event_urlTextFieldKeyPressed

   @Action
   public void doCancel() {
      this.url = null;
      setVisible(false);
   }

   @Action
   public void open() {
      try {
         this.url = new URL(this.urlTextField.getText());
         setVisible(false);
      } catch (MalformedURLException ex) {
         Logger.getLogger(OpenUrlDialog.class.getName()).log(Level.WARNING, null, ex);
      }
   }
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JPanel buttonPanel;
   private javax.swing.JButton cancelButton;
   private javax.swing.JButton openButton;
   private javax.swing.JPanel urlCenterPanel;
   private javax.swing.JLabel urlLabel;
   private javax.swing.JTextField urlTextField;
   // End of variables declaration//GEN-END:variables
}
